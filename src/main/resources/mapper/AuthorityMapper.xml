<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jin.learn.dao.AuthorityMapper">
    <resultMap id="BaseResultMap" type="com.jin.learn.entity.Authority">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="pid" jdbcType="BIGINT" property="pid"/>
        <result column="authority" jdbcType="VARCHAR" property="authority"/>
        <result column="authority_name" jdbcType="VARCHAR" property="authorityName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="is_deleted" jdbcType="SMALLINT" property="isDeleted"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, type, pid, authority, authority_name, create_time, modify_time, is_deleted
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from authority
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from authority
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.jin.learn.entity.Authority">
    insert into authority (id, type, pid, 
      authority, authority_name, create_time, 
      modify_time, is_deleted)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{pid,jdbcType=BIGINT}, 
      #{authority,jdbcType=VARCHAR}, #{authorityName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=SMALLINT})
  </insert>
    <insert id="insertSelective" parameterType="com.jin.learn.entity.Authority">
        insert into authority
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="authority != null">
                authority,
            </if>
            <if test="authorityName != null">
                authority_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=BIGINT},
            </if>
            <if test="authority != null">
                #{authority,jdbcType=VARCHAR},
            </if>
            <if test="authorityName != null">
                #{authorityName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=SMALLINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jin.learn.entity.Authority">
        update authority
        <set>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=BIGINT},
            </if>
            <if test="authority != null">
                authority = #{authority,jdbcType=VARCHAR},
            </if>
            <if test="authorityName != null">
                authority_name = #{authorityName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=SMALLINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jin.learn.entity.Authority">
    update authority
    set type = #{type,jdbcType=INTEGER},
      pid = #{pid,jdbcType=BIGINT},
      authority = #{authority,jdbcType=VARCHAR},
      authority_name = #{authorityName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="findByAccountId" resultType="java.lang.String">
        select
          authority
        from authority
        where id in
        (select authority_id from role_authority where role_id in (select role_id from account_role where account_id =
        #{id}));
    </select>
</mapper>